part start ${devtype} ${devnum} 2 dev_env
${devtype} dev ${devnum}

setenv loadbootstate " \
    echo 'loading env...'; \
    ${devtype} read ${ramdisk_addr_r} ${dev_env} 0x20; \
    env import -c ${ramdisk_addr_r} 0x4000;"

setenv storebootstate " \
    echo 'storing env...'; \
    env export -c -s 0x4000 ${ramdisk_addr_r} BOOT_ORDER BOOT_A_LEFT BOOT_B_LEFT; \
    ${devtype} write ${ramdisk_addr_r} ${dev_env} 0x20;"

run loadbootstate

test -n "${BOOT_ORDER}" || setenv BOOT_ORDER "A B"
test -n "${BOOT_A_LEFT}" || setenv BOOT_A_LEFT 3
test -n "${BOOT_B_LEFT}" || setenv BOOT_B_LEFT 3

# Rabbit bootargs
setenv bootargs_piboothos "8250.nr_uarts=1 console=tty1 rootfstype=ext4 rootwait noinitrd"

# Rabbit system A/B
setenv bootargs_a "root=/dev/mmcblk0p5"
setenv bootargs_b "root=/dev/mmcblk0p6"

setenv load_kernel "fatload ${devtype} ${devnum}:1 ${kernel_addr_r} Image"

setenv bootargs
for BOOT_SLOT in "${BOOT_ORDER}"; do
  if test "x${bootargs}" != "x"; then
    # skip remaining slots
  elif test "x${BOOT_SLOT}" = "xA"; then
    if test ${BOOT_A_LEFT} -gt 0; then
      setexpr BOOT_A_LEFT ${BOOT_A_LEFT} - 1
      echo "Found valid slot A, ${BOOT_A_LEFT} attempts remaining"
      setenv bootargs "${bootargs_piboothos} ${bootargs_a} rauc.slot=A"
    fi
  elif test "x${BOOT_SLOT}" = "xB"; then
    if test ${BOOT_B_LEFT} -gt 0; then
      setexpr BOOT_B_LEFT ${BOOT_B_LEFT} - 1
      echo "Found valid slot B, ${BOOT_B_LEFT} attempts remaining"
      setenv bootargs "${bootargs_piboothos} ${bootargs_b} rauc.slot=B"
    fi
  fi
done

if test -n "${bootargs}"; then
  run storebootstate
else
  echo "No valid slot found, resetting tries to 3"
  setenv BOOT_A_LEFT 3
  setenv BOOT_B_LEFT 3
  run storebootstate
  reset
fi

echo "Loading kernel"
run load_kernel
echo " Starting kernel"
booti ${kernel_addr_r} - ${fdt_addr}

echo "Fails on boot"
reset
